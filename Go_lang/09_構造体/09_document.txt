Go 言語 : struct() 
		--------------- defer 最も使用される処理 ---------------

	defer文を使用した resource の解放処理 : file作成 -> 書き込み・追記 -> Close


			--------------- struct method ---------------

			任意の型に特化した関数を定義する仕組み

	・ 基本原則は method のレシーバーは pointer型(参照渡し)にしておく事がのぞましい

	・ 呼び出し側は pionter にする必要はない
		- 全ては method のレシーバーが参照渡し or 値渡しで挙動が決まるので


			--------------- struct method ---------------

	・ 構造体はフィールドに構造体を埋め込む事ができる
		- フィールド名と型名が一緒になる事はよく見られる形式

	・ 構造体だけ記述して型名を省略できる
		- 型名省略の場合のに直接構造体のフィールドに acssce できる


			----------- struct型 コンストラクタ -------------

			Go言語にはコンストラク機能はないが、パターンとして
			コンストラクタ関数を使用する事が良くある

	・ コンストラクタ関数を使用して User型の pointer を生成する
		- Goでは良く使用される
			--------------- struct 独自型 -----------------

	・　特有の機能を持った独自な型や独自のmethodをtypeを用いて作成する事ができる

 
